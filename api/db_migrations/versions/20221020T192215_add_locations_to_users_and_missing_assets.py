"""add-locations-to-users-and-missing-assets

Revision ID: f76e4c743404
Revises: 96c1bb772b2e
Create Date: 2022-10-20 19:22:15.980165+01:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f76e4c743404'
down_revision = '96c1bb772b2e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_locations',
    sa.Column('created_app', sa.String(), server_default=sa.text("current_setting('application_name')"), nullable=False),
    sa.Column('created_user', sa.String(), server_default=sa.text('CURRENT_USER'), nullable=False),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_app', sa.String(), server_default=sa.text("current_setting('application_name')"), nullable=False),
    sa.Column('updated_user', sa.String(), server_default=sa.text('CURRENT_USER'), nullable=False),
    sa.Column('updated_on', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('location_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_locations_user_id', 'user_locations', ['user_id'], unique=False)
    op.create_index('ix_locations_user_id_location_id', 'user_locations', ['user_id', 'location_id'], unique=True)
    op.add_column('beers', sa.Column('location_id', postgresql.UUID(), nullable=True))
    op.create_foreign_key(None, 'beers', 'locations', ['location_id'], ['id'])
    op.add_column('beverages', sa.Column('location_id', postgresql.UUID(), nullable=True))
    op.create_foreign_key(None, 'beverages', 'locations', ['location_id'], ['id'])

    op.execute("UPDATE beers SET location_id = (SELECT id from locations limit 1)")
    op.alter_column('beers', 'location_id', nullable=False)
    op.execute("UPDATE beverages SET location_id = (SELECT id from locations limit 1)")
    op.alter_column('beverages', 'location_id', nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'beverages', type_='foreignkey')
    op.drop_column('beverages', 'location_id')
    op.drop_constraint(None, 'beers', type_='foreignkey')
    op.drop_column('beers', 'location_id')
    op.drop_index('ix_locations_user_id_location_id', table_name='user_locations')
    op.drop_index('ix_locations_user_id', table_name='user_locations')
    op.drop_table('user_locations')
    # ### end Alembic commands ###
